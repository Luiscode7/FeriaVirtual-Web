@model FeriaVirtualWeb.Models.DataContext.TRANSPORTISTA

@{
    Layout = null;
}

@using (Html.BeginForm("AddNewTransportes", "Transportista", FormMethod.Post, new { id = "form-newtransporte" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal col-md-9 m-auto">
        <h5 class="d-flex justify-content-center">Nuevo Transporte</h5>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IDTRANSPORTISTA)
        @Html.HiddenFor(model => model.RUTTRANSPORTISTA)
        @Html.HiddenFor(model => model.NOMBRE)
        @Html.HiddenFor(model => model.TELEFONO)

        <div class="form-group pb-2">
            @Html.LabelFor(model => model.TIPOTRANSPORTE, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="nk-int-st">
                <div class="col-md-12">
                    @Html.EditorFor(model => model.TIPOTRANSPORTE, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TIPOTRANSPORTE, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group pb-2">
            @Html.LabelFor(model => model.ANCHO, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="nk-int-st">
                <div class="col-md-12">
                    @Html.EditorFor(model => model.ANCHO, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ANCHO, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group pb-2">
            @Html.LabelFor(model => model.ALTO, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="nk-int-st">
                <div class="col-md-12">
                    @Html.EditorFor(model => model.ALTO, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ALTO, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group pb-2">
            @Html.LabelFor(model => model.LARGO, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="nk-int-st">
                <div class="col-md-12">
                    @Html.EditorFor(model => model.LARGO, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LARGO, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group pb-2">
            @Html.LabelFor(model => model.CAPACIDADCARGA, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="nk-int-st">
                <div class="col-md-12">
                    @Html.EditorFor(model => model.CAPACIDADCARGA, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CAPACIDADCARGA, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group pb-3">
            @Html.LabelFor(model => model.REFRIGERACION, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                <div class="chosen-select-act fm-cmp-mg">
                    @Html.DropDownListFor(model => model.REFRIGERACION, new List<SelectListItem> { new SelectListItem { Text = "Seleccione", Value = "Seleccione", Disabled = true, Selected = true }, new SelectListItem { Text = "Si", Value = "1" }, new SelectListItem { Text = "No", Value = "0" } },
                        new { @class = "chosen form-control" })
                    @Html.ValidationMessageFor(model => model.REFRIGERACION, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-12">
                <input type="submit" value="Ingresar" class="btn btn-success notika-btn-success col" id="btnIngresarT" />
                <div class="loadenew d-flex justify-content-center"></div>
            </div>
        </div>
    </div>
}

<script src="~/assest/js/wow.min.js"></script>
<script src="~/assest/js/jquery-price-slider.js"></script>
<script src="~/assest/js/owl.carousel.min.js"></script>
<script src="~/assest/js/jquery.scrollUp.min.js"></script>
<script src="~/assest/js/bootstrap-select.js"></script>
<script src="~/assest/js/chosen.jquery.js"></script>
<script src="~/assest/js/jquery.meanmenu.js"></script>
<script src="~/assest/js/jquery.mCustomScrollbar.concat.min.js"></script>
<script src="~/assest/js/jquery.sparkline.min.js"></script>
<script src="~/assest/js/sparkline-active.js"></script>
<script src="~/assest/js/jquery.flot.js"></script>
<script src="~/assest/js/jquery.flot.resize.js"></script>
<script src="~/assest/js/flot-active.js"></script>
<script src="~/assest/js/jquery.knob.js"></script>
<script src="~/assest/js/jquery.appear.js"></script>
<script src="~/assest/js/knob-active.js"></script>
<script src="~/assest/js/jquery.todo.js"></script>
@*<script src="~/assest/js/waves.min.js"></script>
    <script src="~/assest/js/wave-active.js"></script>*@
<script src="~/assest/js/plugins.js"></script>
<script src="~/assest/js/main.js"></script>


<script>
    $(document).ready(function () {

        var form = $("#form-newtransporte");
        var botonNewTran = $("#btnIngresarT");

        botonNewTran.click(function () {
            $.ajax({
                url: form.attr('action'),
                type: "POST",
                dataType: 'html',
                data: form.serialize(),
                beforeSend: function () {
                    botonNewTran.replaceWith($(".loadenew"));
                    $(".loadenew").html("<img src='@Url.Content("~/assest/img/loading.gif")'>");
                },
                success: function (response) {
                    if (response) {
                        $("#exampleModalCenter6").modal("hide");
                        toastr.options = {
                            "positionClass": "toast-top-right",
                            "timeOut": "4000",
                        }
                        toastr["success"]("Su Nuevo Transporte ha sido Ingresado Exitosamente")
                        $("#transporteid").trigger("click");

                    }
                }
            });
            return false;
        });
    });
</script>